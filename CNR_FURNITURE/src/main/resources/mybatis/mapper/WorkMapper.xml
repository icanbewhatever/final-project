<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cnr_furniture.mapper.WorkMapper">
    <!-- [회사 정보] 조회 -->
    <select id="workSelectCompanyList" resultType="com.cnr_furniture.domain.work.search.WorkSelectCompanyVO">
        SELECT
            c_id as companyId, c_name as companyName, c_div as companyDiv
        FROM
            COMPANY
    </select>

    <!-- [제품 정보] 조회 -->
    <select id="workSelectItemList" resultType="com.cnr_furniture.domain.work.search.WorkSelectItemVO">
        SELECT
            i_id as itemId, i_name as itemName, i_uses as itemUses
        FROM
            ITEM
    </select>

    <!-- [계획 정보] 조회 -->
    <select id="workSelectInstructionList" resultType="com.cnr_furniture.domain.work.search.WorkSelectInstructionVO">
        SELECT
            DISTINCT INS_LOT_ID as insLotId,
            INS_ITEM_ID as insItemId,
            INS_EMP_ID as insEmpId,
            INS_CT_ID as insCtId,
            INS_LOT_SIZE as insLotSize,
            INS_START_DATE as insStartDate,
            INS_END_DATE as insEndDate
        FROM
            INSTRUCTION
        ORDER BY
            insLotId, insCtId
    </select>

    <!-- [공정 정보] 조회 -->
    <select id="workSelectProcessInfoList" resultType="com.cnr_furniture.domain.work.search.WorkSelectProcessInfoVO">
        SELECT
            pi.PI_ID AS pi_id, pi.PI_NAME AS PI_NAME, pi.PI_MACHINE_ID AS PI_MACHINE_ID,
            mi.MI_NAME AS MI_NAME, pi.PI_SEQ || '-' || nvl(mi.MI_POSITION,'X') AS position
        FROM
            PROCESS_INFO pi, MACHINE_INFO mi
        WHERE
            pi.PI_MACHINE_ID = mi.MI_ID
        ORDER BY PI_ID, position
    </select>

    <!-- 설비 정보 조회 -->
    <select id="workSelectMachineInfoList" resultType="com.cnr_furniture.domain.work.search.WorkSelectMachineInfoVO">
        SELECT
            mi.MI_ID AS mi_id,
            mi.MI_NAME AS MI_NAME, pi.PI_SEQ || '-' || nvl(mi.MI_POSITION,'X') AS position
        FROM
            MACHINE_INFO mi, PROCESS_INFO pi
        WHERE
            mi.MI_ID = pi.PI_MACHINE_ID
        ORDER BY mi_id, POSITION
    </select>

    <!-- 작업 조회 -->
    <select id="workSelectWorkList" resultType="com.cnr_furniture.domain.work.search.WorkSelectWorkVO">
        SELECT
            w_id, w_lot_id, W_PI_ID, W_START_TIME, W_END_TIME , W_TIME ,
            W_STATUS , W_PLAN_QUANTITY , W_ITEM_QUANTITY ,W_NOTE ,W_DFT_QUANTITY
        FROM
            WORK
        ORDER BY w_id, w_lot_id, W_PI_ID, W_START_TIME
    </select>

    <!-- 생산팀의 부서명 조회 -->
    <select id="workDpNameList" resultType="com.cnr_furniture.domain.work.workMNG.WorkVO">
        SELECT
            DISTINCT e.E_DP_NAME as
        FROM
            EMPLOYEE e
        WHERE
            e.E_DP_NAME LIKE '생산%'
        ORDER BY e.E_DP_NAME
    </select>

    <!-- 사원정보 조회 -->
    <select id="workEmpInfoList" resultType="com.cnr_furniture.domain.work.search.WorkSelectEmpInfoVO">
        SELECT
            E_DP_NAME, E_ID, E_NAME,
            CASE
                WHEN e_role = 'ROLE_Director' THEN '디렉터'
                WHEN e_role = 'ROLE_Manager' THEN '매니저'
                WHEN e_role = 'ROLE_Staff' THEN '사원'
                ELSE e_role
            END AS e_role
        FROM
            EMPLOYEE
        WHERE
            E_DP_NAME LIKE '생산%'
        ORDER BY
            E_DP_NAME, e_role
    </select>

    <!-- work.jsp ========================================================================================================= -->

    <!-- 공정별 제조수행정보 조회-->
    <select id="selectWorkProcessInfo" resultType="com.cnr_furniture.domain.work.workMNG.WorkProcessInfoVO">
        SELECT
            ROWNUM AS RN,
            PICTC.P_LOT_ID AS P_LOT_ID,
            PICTC.INS_LOT_ID AS INS_LOT_ID,
            PICTC.P_PI_ID AS P_PI_ID,
            PICTC.PI_NAME AS PI_NAME,
            PICTC.P_B_ITEM_ID AS P_B_ITEM_ID,
            PICTC.I_NAME AS I_NAME,
            PICTC.C_ID AS C_ID,
            PICTC.C_NAME AS C_NAME,
            PICTC.P_START_DATE AS P_START_DATE,
            PICTC.P_END_DATE AS P_END_DATE,
            PICTC.P_STATUS AS P_STATUS,
            PICTC.P_PLAN_QUANTITY AS P_PLAN_QUANTITY,
            PICTC.P_ITEM_QUANTITY AS P_ITEM_QUANTITY,
            PICTC.P_DEFECTIVE_QUANTITY AS P_DEFECTIVE_QUANTITY,
            PICTC.CT_UNIT AS CT_UNIT
        FROM
            (SELECT
                    DISTINCT pr.P_PI_ID,
                    pr.P_LOT_ID,
                    ins.INS_LOT_ID,
                    pr.P_B_ITEM_ID,
                    pi.PI_NAME,
                    it.I_NAME,
                    co.C_ID,
                    co.C_NAME,
                    TO_CHAR(pr.P_START_DATE, 'YYYY-MM-DD') AS P_START_DATE,
                    TO_CHAR(pr.P_END_DATE, 'YYYY-MM-DD') AS P_END_DATE,
                    pr.P_STATUS,
                    pr.P_PLAN_QUANTITY,
                    pr.P_ITEM_QUANTITY,
                    pr.P_DEFECTIVE_QUANTITY,
                    UPPER(ct.CT_UNIT) AS CT_UNIT
                FROM
                    PROCESS pr
                    JOIN PROCESS_INFO pi ON pr.P_PI_ID = pi.PI_ID
                    JOIN INSTRUCTION ins ON pr.P_LOT_ID = ins.INS_LOT_ID
                    JOIN CONTRACT ct ON ins.INS_CT_ID = ct.CT_ID
                    JOIN COMPANY co ON ct.CT_Company_ID = co.C_ID
                    JOIN ITEM it ON pr.P_B_ITEM_ID = it.I_ID
                ORDER BY
                    P_START_DATE desc, pr.P_LOT_ID, pr.P_PI_ID*1, pr.P_B_ITEM_ID) PICTC
        <trim prefix="where " prefixOverrides="and">
            <if test="find_work_company != null or find_work_item != null or
                     workStartDate != null or workEndDate != null or
                     find_work_instruction != null or find_work_processInfo != null">
                <if test="find_work_company != ''">
                    AND C_ID = #{find_work_company}
                </if>
                <if test="find_work_item != ''">
                    AND P_B_ITEM_ID = #{find_work_item}
                </if>
                <if test="workStartDate != ''">
                    AND P_START_DATE >= #{workStartDate}
                </if>
                <if test="workEndDate != ''">
                    AND #{workEndDate} >=  P_END_DATE
                </if>
                <if test="find_work_instruction != ''">
                    AND INS_LOT_ID = #{find_work_instruction}
                </if>
                <if test="find_work_processInfo != ''">
                    AND P_PI_ID = #{find_work_processInfo}
                </if>
                <if test="find_work_company == '' and find_work_item == '' and
                     workStartDate == '' and workEndDate == '' and
                     find_work_instruction == '' and find_work_processInfo == '' ">
                    AND 1=0
                </if>
            </if>
        </trim>
    </select>
    <!-- work의 [작업목록] 조회 -->
    <select id="selectWork" resultType="com.cnr_furniture.domain.work.workMNG.WorkVO">
        SELECT
            ROWNUM AS rn,
            WORK.W_ID ,
            WORK.W_LOT_ID ,
            WORK.W_DATE,
            WORK.E_DP_NAME,
            WORK.W_PI_ID,
            WORK.PI_NAME,
            WORK.MI_NAME,
            WORK.POSITION,
            WORK.INS_ITEM_ID,
            WORK.I_NAME,
            WORK.W_STATUS,
            WORK.I_STANDARD,
            WORK.CT_UNIT,
            WORK.W_TIME,
            WORK.W_PLAN_QUANTITY,
            WORK.W_ITEM_QUANTITY
        FROM
            (SELECT
                DISTINCT w.W_ID AS W_ID,
                w.W_LOT_ID AS W_LOT_ID,
                TO_CHAR(w.W_START_TIME, 'YYYY-MM-DD') AS W_DATE,
                dpName.E_DP_NAMES AS E_DP_NAME,
                w.W_PI_ID,
                pi.PI_NAME,
                mi.MI_NAME,
                pi.PI_SEQ || '-' || COALESCE(mi.MI_POSITION, 'X') AS POSITION,
                ins.INS_ITEM_ID,
                it.I_NAME,
                w.W_STATUS,
                it.I_STANDARD,
                UPPER(ct.CT_UNIT) AS CT_UNIT,
                w.W_TIME,
                w.W_PLAN_QUANTITY,
                w.W_ITEM_QUANTITY
            FROM
                WORK w
                LEFT JOIN PROCESS pr ON w.W_LOT_ID = pr.P_LOT_ID
                LEFT JOIN PROCESS_INFO pi ON w.W_PI_ID = pi.PI_ID
                LEFT JOIN MACHINE_INFO mi ON pi.PI_MACHINE_ID = mi.MI_ID
                LEFT JOIN INSTRUCTION ins ON w.W_LOT_ID = ins.INS_LOT_ID
                LEFT JOIN CONTRACT ct ON ins.INS_CT_ID = ct.CT_ID
                LEFT JOIN ITEM it ON pr.P_B_ITEM_ID = it.I_ID
                LEFT JOIN (
                            SELECT
                                WR_WORK_ID,
                                LISTAGG(E_DP_NAME, ', ') WITHIN GROUP (ORDER BY E_DP_NAME) AS E_DP_NAMES
                            FROM (
                                SELECT
                                    WR_WORK_ID,
                                    E_DP_NAME,
                                    ROW_NUMBER() OVER (PARTITION BY WR_WORK_ID, E_DP_NAME ORDER BY E_DP_NAME) AS rn
                                FROM
                                    WORKER wr
                                    JOIN EMPLOYEE e ON wr.WR_EMP_ID = e.E_ID
                                )
                            WHERE
                                rn = 1
                            GROUP BY
                                WR_WORK_ID
                            ) dpName ON w.W_ID = dpName.WR_WORK_ID
        ORDER BY w.W_ID DESC) WORK
        <trim prefix="where " prefixOverrides="and">
            <if test="find_work_item != null or
                     workStartDate != null or workEndDate != null or
                     find_work_instruction != null or find_work_processInfo != null or
                     find_work_id != null">
                <if test="find_work_item != ''">
                    AND INS_ITEM_ID = #{find_work_item}
                </if>
                <if test="workStartDate != ''">
                    AND W_DATE >= #{workStartDate}
                </if>
                <if test="workEndDate != ''">
                    AND #{workEndDate} >=  W_DATE
                </if>
                <if test="find_work_instruction != ''">
                    AND W_LOT_ID = #{find_work_instruction}
                </if>
                <if test="find_work_processInfo != ''">
                    AND W_PI_ID = #{find_work_processInfo}
                </if>
                <if test="find_work_id != ''">
                    AND W_ID = #{find_work_id}
                </if>
                <if test="find_work_item == '' and
                     workStartDate == '' and workEndDate == '' and
                     find_work_instruction == '' and find_work_processInfo == '' and
                     find_work_id == '' ">
                    AND 1=0
                </if>
            </if>
        </trim>
    </select>

    <!-- work의 [생산실적] 조회 (작업목록에서 작업자사원번호(작업자명), 불량수량 추가) -->
    <select id="selectWorkProductionPerformance" resultType="com.cnr_furniture.domain.work.workMNG.WorkVO">
        SELECT
            ROWNUM AS RN,
            WORK.W_ID,
            WORK.W_LOT_ID,
            WORK.W_DATE,
            WORK.E_DP_NAME,
            WORK.allEmpList as allEmpList,
            WORK.substrAllEmp as substrAllEmp,
            WORK.W_PI_ID,
            WORK.PI_NAME,
            WORK.MI_NAME,
            WORK.POSITION,
            WORK.INS_ITEM_ID,
            WORK.I_NAME,
            WORK.W_STATUS,
            WORK.I_STANDARD,
            WORK.CT_UNIT,
            WORK.W_TIME,
            WORK.W_PLAN_QUANTITY,
            WORK.W_ITEM_QUANTITY,
            WORK.w_dft_quantity
        FROM
            (SELECT
                DISTINCT w.W_ID AS W_ID,
                w.W_LOT_ID AS W_LOT_ID,
                TO_CHAR(w.W_START_TIME, 'YYYY-MM-DD') AS W_DATE,
                e.E_DP_NAME,
                LISTAGG(DISTINCT wr.WR_EMP_ID || '(' || e.E_NAME ||')', ', ' ON OVERFLOW TRUNCATE '...') WITHIN GROUP(ORDER BY e.e_role, wr.WR_EMP_ID) OVER(PARTITION BY e.E_DP_NAME, w.W_ID) AS allEmpList,
                Substr(LISTAGG(DISTINCT wr.WR_EMP_ID || '(' || e.E_NAME ||')', ', ' ON OVERFLOW TRUNCATE '...') WITHIN GROUP(ORDER BY e.e_role, wr.WR_EMP_ID) OVER(PARTITION BY e.E_DP_NAME, w.W_ID), 1, 40) || '...' AS substrallemp,
                w.W_PI_ID,
                pi.PI_NAME,
                mi.MI_NAME,
                pi.PI_SEQ || '-' || nvl(mi.MI_POSITION,'X') AS POSITION,
                ins.INS_ITEM_ID,
                it.I_NAME,
                w.W_STATUS,
                it.I_STANDARD,
                UPPER(ct.CT_UNIT) AS CT_UNIT,
                w.W_TIME,
                w.W_PLAN_QUANTITY,
                w.W_ITEM_QUANTITY,
                w.w_dft_quantity
            FROM
                WORK w
                JOIN WORKER wr ON w.W_ID = wr.WR_WORK_ID
                JOIN PROCESS pr ON w.W_LOT_ID = pr.P_LOT_ID
                JOIN PROCESS_INFO pi ON w.W_PI_ID = pi.PI_ID
                JOIN MACHINE_INFO mi ON pi.PI_MACHINE_ID = mi.mi_id
                JOIN INSTRUCTION ins ON w.W_LOT_ID = ins.INS_LOT_ID
                JOIN CONTRACT ct ON ins.INS_CT_ID = ct.CT_ID
                JOIN ITEM it ON pr.P_B_ITEM_ID = it.I_ID
                JOIN EMPLOYEE e ON wr.WR_EMP_ID = e.E_ID
            ORDER BY W_DATE) WORK
        <trim prefix="where " prefixOverrides="and">
            <if test="find_work_item != null or
                     workStartDate != null or workEndDate != null or
                     find_work_instruction != null or find_work_processInfo != null or
                      find_work_id != null">
                <if test="find_work_item != ''">
                    AND INS_ITEM_ID = #{find_work_item}
                </if>
                <if test="workStartDate != ''">
                    AND W_DATE >= #{workStartDate}
                </if>
                <if test="workEndDate != ''">
                    AND #{workEndDate} >=  W_DATE
                </if>
                <if test="find_work_instruction != ''">
                    AND W_LOT_ID = #{find_work_instruction}
                </if>
                <if test="find_work_processInfo != ''">
                    AND W_PI_ID = #{find_work_processInfo}
                </if>
                <if test="find_work_id != ''">
                    AND W_ID = #{find_work_id}
                </if>
                <if test="find_work_item == '' and
                     workStartDate == '' and workEndDate == '' and
                     find_work_instruction == '' and find_work_processInfo == '' and
                     find_work_id == '' ">
                    AND 1=0
                </if>
            </if>
        </trim>
    </select>
    <!-- work의 [자재투입내역]-->
    <select id="selectWorkInsertMaterial"
            resultType="com.cnr_furniture.domain.work.workMNG.WorkSelectInsertMaterialVO">
    <![CDATA[
        SELECT
            ROWNUM AS rn,
            mi.inv_LOT_ID,
            mi.inv_PI_ID,
            mi.ins_item_id,
            mi.i_name,
            mi.ct_company_id,
            mi.c_name,
            mi.inv_date,
            mi.INV_MATERIAL_ID,
            mi.m_name,
            mi.b_unit,
            mi.inv_quantity
        FROM
            (SELECT
                DISTINCT inv.inv_LOT_ID,
                inv.inv_PI_ID,
                ins.INS_ITEM_ID,
                it.i_name,
                ct.CT_Company_ID,
                c.c_name,
                to_char(inv.INV_DATE,'yyyy-mm-dd') AS inv_date,
                inv.INV_MATERIAL_ID,
                m.M_NAME,
                upper(b.B_UNIT) AS B_UNIT,
                substr(inv.INV_QUANTITY,2) AS INV_QUANTITY
            FROM
                INVENTORY inv
                JOIN INSTRUCTION ins ON inv.inv_LOT_ID = ins.INS_LOT_ID
                JOIN PROCESS_INFO pi ON ins.ins_PI_ID = pi.PI_ID
                JOIN CONTRACT ct ON ins.INS_CT_ID = ct.CT_ID
                JOIN COMPANY c ON ct.CT_Company_ID = c.C_ID
                JOIN ITEM it ON ins.INS_ITEM_ID = it.I_ID
                JOIN BOM b ON inv.INV_MATERIAL_ID = b.B_MATERIAL_ID
                JOIN MATERIAL m ON inv.INV_MATERIAL_ID = m.M_ID
            WHERE inv.INV_LOT_ID IS NOT NULL
                AND inv.INV_PI_ID IS NOT NULL
                AND inv.INV_QUANTITY<0
                ORDER BY
                    inv.INV_LOT_ID,inv.inv_PI_ID,inv.INV_MATERIAL_ID) mi
    ]]>
        <trim prefix="where " prefixOverrides="and">
            <if test="find_work_company != null or find_work_item != null or
                     workStartDate != null or workEndDate != null or
                     find_work_instruction != null or find_work_processInfo != null">
                <if test="find_work_company != ''">
                    AND ct_company_id = #{find_work_company}
                </if>
                <if test="find_work_item != ''">
                    AND INS_ITEM_ID = #{find_work_item}
                </if>
                <if test="workStartDate != ''">
                    <![CDATA[ AND inv_date >= #{workStartDate} ]]>
                </if>
                <if test="workEndDate != ''">
                    <![CDATA[ AND #{workEndDate} >=  inv_date ]]>
                </if>
                <if test="find_work_instruction != ''">
                    AND inv_LOT_ID = #{find_work_instruction}
                </if>
                <if test="find_work_processInfo != ''">
                    AND inv_PI_ID = #{find_work_processInfo}
                </if>
                <if test="find_work_company == '' and find_work_item == '' and
                     workStartDate == '' and workEndDate == '' and
                     find_work_instruction == '' and find_work_processInfo == '' ">
                    AND 1=0
                </if>
            </if>
        </trim>
    </select>

    <!-- work 자재투입 수정 모달창에 띄울 데이터 조회-->
    <select id="workSelectInsertMaterialForUpdate" parameterType="hashmap"
            resultType="com.cnr_furniture.domain.work.workMNG.WorkSelectInsertMaterialVO">
        <![CDATA[
            SELECT
                ROWNUM AS rn,
                mi.inv_LOT_ID,
                mi.inv_PI_ID,
                mi.ins_item_id,
                mi.i_name,
                mi.ct_company_id,
                mi.c_name,
                mi.inv_date,
                mi.INV_MATERIAL_ID,
                mi.m_name,
                mi.b_unit,
                mi.inv_quantity
            FROM
                (SELECT
                    DISTINCT inv.inv_LOT_ID,
                    inv.inv_PI_ID,
                    ins.INS_ITEM_ID,
                    it.i_name,
                    ct.CT_Company_ID,
                    c.c_name,
                    to_char(inv.INV_DATE,'yyyy-mm-dd') AS inv_date,
                    inv.INV_MATERIAL_ID,
                    m.M_NAME,
                    upper(b.B_UNIT) AS B_UNIT,
                    substr(inv.INV_QUANTITY,2) AS INV_QUANTITY
                FROM
                    INVENTORY inv
                    JOIN INSTRUCTION ins ON inv.inv_LOT_ID = ins.INS_LOT_ID
                    JOIN PROCESS_INFO pi ON ins.ins_PI_ID = pi.PI_ID
                    JOIN CONTRACT ct ON ins.INS_CT_ID = ct.CT_ID
                    JOIN COMPANY c ON ct.CT_Company_ID = c.C_ID
                    JOIN ITEM it ON ins.INS_ITEM_ID = it.I_ID
                    JOIN BOM b ON inv.INV_MATERIAL_ID = b.B_MATERIAL_ID
                    JOIN MATERIAL m ON inv.INV_MATERIAL_ID = m.M_ID
                    WHERE inv.INV_LOT_ID IS NOT NULL
                        AND inv.INV_PI_ID IS NOT NULL
                        AND inv.INV_QUANTITY<0
                        ORDER BY
                        inv.INV_LOT_ID,inv.inv_PI_ID,inv.INV_MATERIAL_ID) mi
            WHERE
                mi.INV_LOT_ID = #{inv_lot_id}
                AND mi.INV_PI_ID = #{inv_pi_id}
                AND mi.INV_MATERIAL_ID = #{inv_material_id}
                AND mi.INV_QUANTITY = #{inv_quantity}
        ]]>
    </select>

    <!-- work 자재투입내역의 수정버튼을 통한 모달창의 [자재투입내역 수정]-->
    <update id="workInsertMaterialUpdate" parameterType="com.cnr_furniture.domain.work.workMNG.WorkUpdateMaterialModalVO">
        UPDATE
            INVENTORY
        SET
            INV_QUANTITY = '-' || #{updateInvQuantity}
        WHERE
            INV_LOT_ID = #{inv_lot_id}
            AND INV_PI_ID = #{inv_pi_id}
            AND INV_MATERIAL_ID = #{inv_material_id}
            AND INV_QUANTITY = '-' || #{inv_quantity}
    </update>

    <!-- work의 [작업자] 조회-->
    <select id="selectWorker" resultType="com.cnr_furniture.domain.work.workMNG.WorkerVO">
        SELECT
            ROWNUM AS rn,
            wr.e_dp_name,
            wr.e_name,
            CASE
            WHEN wr.e_role = 'ROLE_Director' THEN '디렉터'
            WHEN wr.e_role = 'ROLE_Manager' THEN '매니저'
            WHEN wr.e_role = 'ROLE_Staff' THEN '사원'
            ELSE wr.e_role
            END AS e_role,
            wr.wr_emp_id,
            wr.w_id,
            wr.w_lot_id,
            wr.w_pi_id,
            wr.position,
            wr.wr_start_time,
            wr.wr_end_time
        FROM
            (SELECT
                e.E_DP_NAME,
                e.E_NAME,
                e.E_ROLE,
                wr.WR_EMP_ID,
                w.w_id,
                w.W_LOT_ID,
                w.W_PI_ID,
                pi.PI_SEQ || '-' || NVL(mi.MI_POSITION, 'X') AS POSITION,
                TO_CHAR(wr.WR_START_TIME, 'yyyy-mm-dd HH24:mi:ss') AS WR_START_TIME,
                TO_CHAR(wr.WR_END_TIME, 'yyyy-mm-dd HH24:mi:ss') AS WR_END_TIME
            FROM
                WORK w
                JOIN WORKER wr ON w.W_ID = wr.WR_WORK_ID
                JOIN EMPLOYEE e ON wr.WR_EMP_ID = e.E_ID
                JOIN PROCESS_INFO pi ON w.W_PI_ID = pi.PI_ID
                JOIN MACHINE_INFO mi ON pi.PI_MACHINE_ID = mi.MI_ID
            <trim prefix="where " prefixOverrides="and">
                <if test="workStartDate != null and workStartDate != ''">
                    <![CDATA[AND wr.WR_START_TIME >= #{workStartDate}]]>
                </if>
                <if test="workEndDate != null and workEndDate != ''">
                    <![CDATA[AND wr.WR_END_TIME <= #{workEndDate}]]>
                </if>
                <if test="find_work_instruction != null and find_work_instruction != ''">
                    AND w.W_LOT_ID = #{find_work_instruction}
                </if>
                <if test="find_work_processInfo != null and find_work_processInfo != ''">
                    AND w.W_PI_ID = #{find_work_processInfo}
                </if>
                <if test="find_work_id != null and find_work_id != ''">
                    AND w.W_ID = #{find_work_id}
                </if>
            </trim>
            ORDER BY
                w.W_ID DESC, e.E_DP_NAME, wr.WR_EMP_ID
            ) wr
    </select>

    <!-- work.jsp 의 자재투입 모달창 =========================================================== -->

    <!-- work 자재투입 모달창의 [로트번호의 공정번호] 조회-->
    <select id="workSelectInsProIdModal" resultType="com.cnr_furniture.domain.work.workMNG.WorkInsertMaterialModalVO">
        SELECT
            ins.ins_lot_id as insLotIdModal,
            ins.ins_pi_id as processIdModal
        FROM
            INSTRUCTION ins
        WHERE
            ins.ins_lot_id = #{insLotIdModal}
        ORDER BY
            insLotIdModal, processIdModal*1
    </select>

    <!-- work 자재투입등록 모달창의 [로트번호] 입력에 따른 [제품번호],[제품명],[계획생산수량] 조회 -->
    <select id="workSelectInsLotIdAutoDataModal"
            resultType="com.cnr_furniture.domain.work.workMNG.WorkInsertMaterialModalVO">
        SELECT
            DISTINCT ins.INS_LOT_ID AS insLotIdModal,
            ins.INS_ITEM_ID AS itemIdModal,
            it.I_NAME AS itemNameModal,
            ins.INS_LOT_SIZE AS productionPlanQuantityModal
        FROM
            INSTRUCTION ins
            JOIN BOM b ON ins.ins_ITEM_ID = b.B_ITEM_ID
            JOIN ITEM it ON ins.INS_ITEM_ID = it.I_ID
            JOIN CONTRACT ct ON ins.INS_CT_ID = ct.CT_ID
        WHERE
            ins.INS_LOT_ID = #{insLotIdModal}
    </select>

    <!-- 로트번호 입력에 따른 [자재번호] 조회 -->
    <select id="workSelectMaterialIdModal"
            resultType="com.cnr_furniture.domain.work.workMNG.WorkInsertMaterialModalVO">
        SELECT
            DISTINCT ins.INS_LOT_ID AS insLotIdModal,
            b.B_MATERIAL_ID AS materialIdModal
        FROM
            INSTRUCTION ins
            JOIN BOM b ON ins.ins_ITEM_ID = b.B_ITEM_ID
            JOIN MATERIAL m ON b.B_MATERIAL_ID = m.M_ID
        WHERE
            ins.INS_LOT_ID = #{insLotIdModal}
        ORDER BY b.B_MATERIAL_ID
    </select>

    <!-- 자재번호 선택에 따른 [자재명],[제품1EA별 투입수량],[최소투입수량],[단위] 조회 -->
    <select id="workSelectMaterialIdAutoDataModal"
            resultType="com.cnr_furniture.domain.work.workMNG.WorkInsertMaterialModalVO">
        SELECT
            DISTINCT ins.INS_LOT_ID AS insLotIdModal,
            b.B_MATERIAL_ID AS materialIdModal,
            m.M_NAME AS materialNameModal,
            upper(b.B_UNIT) AS unitMaterialModal,
            b.B_MATERIAL_QUANTITY AS item1EaMaterialModal,
            ins.INS_LOT_SIZE * b.B_MATERIAL_QUANTITY AS minInsertQuantityModal
        FROM
            INSTRUCTION ins
            JOIN BOM b ON ins.ins_ITEM_ID = b.B_ITEM_ID
            JOIN ITEM it ON ins.INS_ITEM_ID = it.I_ID
            JOIN MATERIAL m ON b.B_MATERIAL_ID = m.M_ID
        WHERE
            ins.INS_LOT_ID = #{insLotIdModal}
            AND b.B_MATERIAL_ID = #{materialIdModal}
    </select>

    <!-- work 자재투입 모달창의 [자재투입] 등록 -->
    <insert id="workInsertMaterial" parameterType="com.cnr_furniture.domain.work.workMNG.WorkInsertMaterialModalVO">
        INSERT INTO INVENTORY
            (
            inv_material_id,
            inv_lot_id,
            inv_pi_id,
            inv_date,
            inv_quantity,
            inv_unit
            )
        VALUES
            (
            #{materialIdModal},
            #{insLotIdModal},
            #{processIdModal},
            CURRENT_TIMESTAMP,
            '-'||#{insertQuantityModal},
            #{unitMaterialModal}
            )
    </insert>
    <!-- work.jsp 의 작업등록 모달창 =========================================================== -->

    <!-- work 작업등록 모달창의 [로트번호] 입력에 따른 [공정번호] 조회-->
    <select id="workInsertModalSelectProIdByLotId"
            resultType="com.cnr_furniture.domain.work.workMNG.WorkInsertModalVO">
        SELECT
        ins.ins_lot_id as workInsertModalLotId,
        ins.ins_pi_id as workInsertModalProcessId
        FROM
        INSTRUCTION ins
        WHERE
        ins.ins_lot_id = #{workInsertModalLotId}
        ORDER BY
        workInsertModalLotId, workInsertModalProcessId*1
    </select>

    <!-- work 작업등록 모달창의 [로트번호] 입력에 따른 [제품번호],[제품명],[생산단위] 조회-->
    <select id="workInsertModalSelectAutoDataByLotId"
            resultType="com.cnr_furniture.domain.work.workMNG.WorkInsertModalVO">
        SELECT
            DISTINCT INS_LOT_ID AS workInsertModalLotId,
            ins.INS_ITEM_ID AS workInsertModalItemId,
            it.I_NAME AS workInsertModalItemName,
            upper(ct.CT_UNIT) AS workInsertModalUnit
        FROM
            INSTRUCTION ins
            JOIN BOM b ON ins.ins_ITEM_ID = b.B_ITEM_ID
            JOIN ITEM it ON ins.INS_ITEM_ID = it.I_ID
            JOIN CONTRACT ct ON ins.INS_CT_ID = ct.CT_ID
        WHERE
            ins.INS_LOT_ID = #{workInsertModalLotId}
    </select>

    <!-- work 작업등록 모달창의 [공정번호] 입력에 따른 [공정명], [설비번호], [설비명], [작업위치], [남은생산수량] 조회-->
    <select id="workInsertModalSelectAutoDataByProId"
            resultType="com.cnr_furniture.domain.work.workMNG.WorkInsertModalVO">
        SELECT
            pi.PI_ID AS workInsertModalProcessId,
            pi.PI_NAME AS workInsertModalProcessName,
            pi.PI_MACHINE_ID AS workInsertModalMachineId,
            mi.MI_NAME AS workInsertModalMachineName,
            pi.PI_SEQ || '-' || mi.MI_POSITION AS workInsertModalWorkPosition,
            p.P_PLAN_QUANTITY - p.P_ITEM_QUANTITY AS workInsertModalLeftoverQuantity
        FROM
            PROCESS_INFO pi
            JOIN MACHINE_INFO mi ON pi.PI_MACHINE_ID = mi.mi_id
            JOIN PROCESS p ON p.P_PI_ID = pi.PI_ID
        WHERE
            p.P_LOT_ID = #{workInsertModalLotId}
            AND pi.PI_ID = #{workInsertModalProcessId}
    </select>

    <!-- work 작업등록 모달창의 [작업] 등록 -->
    <insert id="workInsert" parameterType="com.cnr_furniture.domain.work.workMNG.WorkInsertModalVO">
        INSERT INTO WORK
            (
            W_LOT_ID,
            W_PI_ID,
            W_START_TIME,
            W_END_TIME,
            W_TIME,
            W_PLAN_QUANTITY,
            W_NOTE
            )
        VALUES
            (
            #{workInsertModalLotId},
            #{workInsertModalProcessId},
            #{workInsertModalWorkStartTime},
            #{workInsertModalWorkEndTime},
            #{workInsertModalWorkTime},
            #{workInsertModalPlanQuantity},
            #{workInsertModalNote}
            )

    </insert>

    <!-- [work.jsp 의 작업상세 및 수정, 삭제 모달창] ============================================================== -->

    <!-- work 작업상세 모달창의 작업상세 조회-->
    <select id="workDetailModalSelectAutoDataByWorkId" parameterType="hashmap"
            resultType="com.cnr_furniture.domain.work.workMNG.WorkDetailModalVO">
        SELECT
            DISTINCT w.W_ID AS workDetailModalWorkId,
            w.W_LOT_ID AS workDetailModalLotId,
            w.W_PI_ID AS workDetailModalProcessId,
            pi.PI_NAME AS workDetailModalProcessName,
            pi.PI_SEQ || '-' || NVL(mi.MI_POSITION, 'X') AS workDetailModalWorkPosition,
            pi.PI_MACHINE_ID AS workDetailModalMachineId,
            mi.MI_NAME AS workDetailModalMachineName,
            UPPER(ct.CT_UNIT) AS workDetailModalUnit,
            ins.INS_ITEM_ID as workDetailModalItemId,
            it.I_NAME AS workDetailModalItemName,
            it.I_STANDARD AS workDetailModalItemStandard,
            w.W_PLAN_QUANTITY AS workDetailModalPlanQuantity,
            w.W_ITEM_QUANTITY AS workDetailModalProQuantity,
            TO_CHAR(w.W_START_TIME, 'YYYY-MM-DD HH24:MI:SS') AS workDetailModalWorkStartTime,
            TO_CHAR(w.W_END_TIME, 'YYYY-MM-DD HH24:MI:SS') AS workDetailModalWorkEndTime,
            w.W_TIME AS workDetailModalWorkTime,
            w.W_STATUS AS workDetailModalWorkStatus,
            w.W_NOTE AS workDetailModalNote
        FROM
            WORK w
            LEFT JOIN PROCESS_INFO pi ON w.W_PI_ID = pi.PI_ID
            LEFT JOIN MACHINE_INFO mi ON pi.PI_MACHINE_ID = mi.MI_ID
            LEFT JOIN PROCESS p ON w.W_pi_ID = p.P_PI_ID
            LEFT JOIN INSTRUCTION ins ON w.W_LOT_ID = ins.INS_LOT_ID
            LEFT JOIN CONTRACT ct ON ins.INS_CT_ID = ct.CT_ID
            LEFT JOIN ITEM it ON ins.INS_ITEM_ID  = it.I_ID
        WHERE
            w.w_id = #{workDetailModalWorkId}
            AND w.W_LOT_ID = #{workDetailModalLotId}
            AND w.W_PI_ID = #{workDetailModalProcessId}
    </select>

    <!-- Work 의 작업상세 - 모달창을 이용한 작업 수정 -->
    <update id="workDetailModalUpdate" parameterType="com.cnr_furniture.domain.work.workMNG.WorkDetailModalVO">
        UPDATE
            work
        SET
            W_START_TIME = #{workDetailModalWorkStartTime},
            W_END_TIME = #{workDetailModalWorkEndTime},
            W_TIME = #{workDetailModalWorkTime},
            W_STATUS = #{workDetailModalWorkStatus},
            W_PLAN_QUANTITY = #{workDetailModalPlanQuantity},
            W_ITEM_QUANTITY = #{workDetailModalProQuantity},
            W_NOTE = #{workDetailModalNote, jdbcType=VARCHAR}
        WHERE
            w_id = #{workDetailModalWorkId}
            and w_lot_id = #{workDetailModalLotId}
            and w_pi_id = #{workDetailModalProcessId}
    </update>

    <!-- Work 의 작업상세 - 모달창을 이용한 제조수행 수정 : work 테이블의  W_PLAN_QUANTITY가 수정됐을 때 이전값을 빼주고 현재값을 더함 -->
    <update id="workDetailModalUpdateProQuantity" parameterType="com.cnr_furniture.domain.work.workMNG.WorkDetailModalVO">
        UPDATE PROCESS
        SET
            P_ITEM_QUANTITY = P_ITEM_QUANTITY + #{workDetailModalProQuantity}
        WHERE
            P_LOT_ID = #{workDetailModalLotId}
            and P_PI_ID = #{workDetailModalProcessId}
    </update>

    <!-- Work 의 작업상세 - 모달창을 이용한 설비 작동상태 수정 : work 테이블의 w_status가 작업중일 때 MW_STATUS = '가동' -->
    <update id="workDetailModalUpdateMiWorkByStatusWork" parameterType="int">
        UPDATE MACHINE_WORK
        SET
            MW_STATUS = '가동'
        WHERE
            MW_MI_ID = #{workDetailModalMachineId}
    </update>

    <!-- Work 의 작업상세 - 모달창을 이용한 설비 작동상태 수정 : work 테이블의 w_status가 작업중단일 때 MW_STATUS = '수리중', MW_CONDITION = '수리요청' -->
    <update id="workDetailModalUpdateMiWorkByStatusRepair" parameterType="int">
        UPDATE MACHINE_WORK
        SET
            MW_STATUS = '수리중',
            MW_CONDITION = '수리요청'
        WHERE
            MW_MI_ID = #{workDetailModalMachineId}
    </update>

    <!-- Work 의 작업상세 - 모달창을 이용한 설비 작동상태 수정 : work 테이블의 w_status가 작업정지 또는 작업완료일 때 MW_STATUS = '비가동' -->
    <update id="workDetailModalUpdateMiWorkByStatusRestFin" parameterType="int">
        UPDATE MACHINE_WORK
        SET
            MW_STATUS = '비가동'
        WHERE
            MW_MI_ID = #{workDetailModalMachineId}
    </update>
    <!-- Work 의 작업상세 - 모달창을 이용한 작업 삭제-->
    <delete id="workDetailModalDelete" parameterType="int">
        delete from work where w_id = #{workDetailModalWorkId}
    </delete>

    <!-- todayWorkInsert.jsp ============================================================================ -->

    <!-- todayWorkInsert 의 [공정별 설비상태]조회 -->
    <select id="selectWorkProcessMachine"
            resultType="com.cnr_furniture.domain.work.todayWorkInsert.WorkProcessMachineVO">
        SELECT
            ROWNUM AS rn,
            pimi.pi_id,
            pimi.pi_name,
            pimi.pi_machine_id,
            pimi.mi_name,
            pimi.position,
            pimi.mw_status,
            pimi.mw_condition
        FROM
            (SELECT
                pi.pi_id,
                pi.pi_name,
                pi.pi_machine_id,
                mi.mi_name,
                pi.PI_SEQ || '-' || nvl(mi.MI_POSITION,'X') AS POSITION,
                mw.MW_STATUS,
                mw.MW_CONDITION
            FROM
                process_info pi
                JOIN MACHINE_INFO mi ON pi.PI_MACHINE_ID = mi.mi_id
                JOIN MACHINE_WORK mw ON mw.MW_MI_ID = mi.mi_id
            ORDER BY pi.pi_id, pi.pi_machine_id) pimi
        <trim prefix="where " prefixOverrides="and">
            <if test="find_work_processInfo != null">
                <if test="find_work_processInfo != ''">
                    AND pi_id = #{find_work_processInfo}
                </if>
                <if test="find_work_processInfo == '' ">
                    AND 1=0
                </if>
            </if>
        </trim>
    </select>
    <!-- todayWorkInsert 의 [당일작업목록] 조회-->
    <select id="selectTodayWork" resultType="com.cnr_furniture.domain.work.todayWorkInsert.TodayWorkVO">
        SELECT
            ROWNUM AS rn,
            WORK.W_ID ,
            WORK.W_LOT_ID ,
            WORK.W_DATE,
            WORK.E_DP_NAME,
            WORK.W_PI_ID,
            WORK.PI_NAME,
            WORK.MI_NAME,
            WORK.POSITION,
            WORK.INS_ITEM_ID,
            WORK.I_NAME,
            WORK.W_STATUS,
            WORK.I_STANDARD,
            WORK.CT_UNIT,
            WORK.W_TIME,
            WORK.W_PLAN_QUANTITY,
            WORK.W_ITEM_QUANTITY
        FROM
            (SELECT
                DISTINCT w.W_ID AS W_ID,
                w.W_LOT_ID AS W_LOT_ID,
                TO_CHAR(w.W_START_TIME, 'YYYY-MM-DD') AS W_DATE,
                e.E_DP_NAME,
                w.W_PI_ID,
                pi.PI_NAME,
                mi.MI_NAME,
                pi.PI_SEQ || '-' || nvl(mi.MI_POSITION,'X') AS POSITION,
                ins.INS_ITEM_ID,
                it.I_NAME,
                w.W_STATUS,
                it.I_STANDARD,
                UPPER(ct.CT_UNIT) AS CT_UNIT,
                w.W_TIME,
                w.W_PLAN_QUANTITY,
                w.W_ITEM_QUANTITY
            FROM
                WORK w
                JOIN WORKER wr ON w.W_ID = wr.WR_WORK_ID
                JOIN PROCESS pr ON w.W_LOT_ID = pr.P_LOT_ID
                JOIN PROCESS_INFO pi ON w.W_PI_ID = pi.PI_ID
                JOIN MACHINE_INFO mi ON pi.PI_MACHINE_ID = mi.mi_id
                JOIN INSTRUCTION ins ON w.W_LOT_ID = ins.INS_LOT_ID
                JOIN CONTRACT ct ON ins.INS_CT_ID = ct.CT_ID
                JOIN ITEM it ON pr.P_B_ITEM_ID = it.I_ID
                JOIN EMPLOYEE e ON wr.WR_EMP_ID = e.E_ID
            ORDER BY W_DATE) WORK
        WHERE
            WORK.W_DATE = to_char( sysdate, 'YYYY-MM-DD')
            <if test="find_work_instruction != null or find_work_processInfo != null">
                <if test="find_work_instruction != ''">
                    AND W_LOT_ID = #{find_work_instruction}
                </if>
                <if test="find_work_processInfo != ''">
                    AND W_PI_ID = #{find_work_processInfo}
                </if>
                <if test="find_work_instruction == '' and find_work_processInfo == '' ">
                    AND 1=0
                </if>
            </if>
    </select>

    <!-- workerInsert.jsp ============================================================================ -->

    <!-- workerInsert 의 작업자배치 조회 -->
    <select id="selectWorkerInsertList" resultType="com.cnr_furniture.domain.work.workerInsert.WorkSelectWorkerVO">
        SELECT
            ROWNUM AS rn,
            sub.W_ID,
            sub.W_START_TIME,
            sub.W_END_TIME,
            sub.W_LOT_ID,
            sub.W_PI_ID,
            sub.PI_NAME,
            sub.POSITION,
            sub.PI_MACHINE_ID,
            sub.MI_NAME,
            sub.substrAllEmp,
            sub.allEmpList
        FROM (
            SELECT
                w.W_ID,
                TO_CHAR(w.W_START_TIME, 'YYYY-MM-DD HH24:MI:SS') AS W_START_TIME,
                TO_CHAR(w.W_END_TIME, 'YYYY-MM-DD HH24:MI:SS') AS W_END_TIME,
                w.W_LOT_ID,
                w.W_PI_ID,
                pi.PI_NAME,
                pi.PI_SEQ || '-' || NVL(mi.MI_POSITION, 'X') AS POSITION,
                pi.PI_MACHINE_ID,
                mi.MI_NAME,
                emp_sub.E_DP_NAMES_SUBSTR AS substrAllEmp,
                emp_sub.E_DP_NAMES_LIST AS allEmpList
            FROM
                WORK w
                LEFT JOIN PROCESS_INFO pi ON w.W_PI_ID = pi.PI_ID
                LEFT JOIN MACHINE_INFO mi ON pi.PI_MACHINE_ID = mi.MI_ID
                LEFT JOIN (
                            SELECT
                                wr.WR_WORK_ID,
                                Substr(LISTAGG(DISTINCT wr_emp_id_with_name, ', ') WITHIN GROUP (ORDER BY e.e_role, wr.WR_EMP_ID), 1, 40) || '...' AS E_DP_NAMES_SUBSTR,
                                LISTAGG(DISTINCT wr_emp_id_with_name, ', ') WITHIN GROUP (ORDER BY e.e_role, wr.WR_EMP_ID) AS E_DP_NAMES_LIST
                            FROM (
                                    SELECT
                                        wr.WR_EMP_ID,
                                        wr.WR_WORK_ID,
                                        wr.WR_EMP_ID || '(' || e.E_NAME || ')' AS wr_emp_id_with_name,
                                        e.E_DP_NAME
                                    FROM
                                        WORKER wr
                                        JOIN EMPLOYEE e ON wr.WR_EMP_ID = e.E_ID
                                    ) wr JOIN EMPLOYEE e ON wr.WR_EMP_ID = e.E_ID
                                    GROUP BY wr.WR_WORK_ID
                                ) emp_sub ON w.W_ID = emp_sub.WR_WORK_ID
            <trim prefix="WHERE" prefixOverrides="AND">
                <if test="workStartDate != null and workStartDate != ''">
                    <![CDATA[AND TO_CHAR(w.W_START_TIME, 'YYYY-MM-DD') >= #{workStartDate}]]>
                </if>
                <if test="workEndDate != null and workEndDate != ''">
                    <![CDATA[AND TO_CHAR(w.W_END_TIME, 'YYYY-MM-DD') <= #{workEndDate}]]>
                </if>
                <if test="find_work_instruction != null and find_work_instruction != ''">
                    AND w.W_LOT_ID = #{find_work_instruction}
                </if>
                <if test="find_work_processInfo != null and find_work_processInfo != ''">
                    AND w.W_PI_ID = #{find_work_processInfo}
                </if>
                <if test="find_work_id != null and find_work_id != ''">
                    AND w.W_ID = #{find_work_id}
                </if>
                <if test="find_work_machine != null and find_work_machine != ''">
                    AND pi.PI_MACHINE_ID = #{find_work_machine}
                </if>
            </trim>
            ORDER BY w.W_ID DESC
        ) sub

    </select>
    <!-- workerInsert.jsp 의 작업자 관리 모달창 ============================================================================ -->

    <!-- workerInsert 의 작업자 관리 모달창의 작업자 관리를 위한 데이터 조회 -->
    <select id="workSelectWorkerInsertDataForInsert" parameterType="int"
            resultType="com.cnr_furniture.domain.work.workerInsert.WorkerInsertModalVO">
        SELECT
            DISTINCT w.W_ID as edit_w_id,
            to_char(w.w_start_time, 'yyyy-mm-dd HH24:mi:ss') AS edit_w_start_time,
            to_char(w.w_end_time, 'yyyy-mm-dd HH24:mi:ss') AS edit_w_end_time,
            w.W_LOT_ID as edit_w_lot_id,
            w.W_PI_ID as edit_w_pi_id,
            pi.PI_MACHINE_ID as edit_pi_machine_id
        FROM
            WORK w
            LEFT JOIN PROCESS_INFO pi ON w.W_PI_ID = pi.PI_ID
            LEFT JOIN MACHINE_INFO mi ON pi.PI_MACHINE_ID = mi.MI_ID
        WHERE w.W_ID = #{w_id}
    </select>

    <!-- 부서명에 따른 사원번호 조회 -->
    <select id="workSelectWorkerInsertModalEmpInfoList" resultType="com.cnr_furniture.domain.work.workerInsert.WorkerInsertModalSelectEmpInfoByDpNameVO">
        SELECT
            E_DP_NAME AS edit_dp_name, E_ID AS edit_emp_id, E_NAME AS edit_e_name,
            CASE
                WHEN e_role = 'ROLE_Director' THEN '디렉터'
                WHEN e_role = 'ROLE_Manager' THEN '매니저'
                WHEN e_role = 'ROLE_Staff' THEN '사원'
                ELSE e_role
            END AS edit_e_role
        FROM
            EMPLOYEE
        WHERE
            E_DP_NAME like #{edit_dp_name}
        ORDER BY
            edit_dp_name, edit_e_role, edit_emp_id
    </select>

    <!-- [작업번호]에 따른 작업자 조회 -->
    <select id="workSelectWorkerInsertModalWorkerInfoList" resultType="com.cnr_furniture.domain.work.workerInsert.WorkerInsertModalSelectWorkerInfoByWorkIdVO">
        SELECT
            wr.WR_WORK_ID AS edit_w_id,
            e.E_DP_NAME AS workerInfoDpName,
            e.E_ID AS workerInfoEmpId,
            e.E_NAME AS workerInfoEmpName,
            CASE
                WHEN e_role = 'ROLE_Director' THEN '디렉터'
                WHEN e_role = 'ROLE_Manager' THEN '매니저'
                WHEN e_role = 'ROLE_Staff' THEN '사원'
            ELSE e_role
            END AS workerInfoEmpRole
        FROM
            WORKER wr
            JOIN EMPLOYEE e ON wr.WR_EMP_ID = e.E_ID
        WHERE
            wr.WR_WORK_ID = #{edit_w_id}
        ORDER BY
            CASE
                WHEN e.E_ROLE = 'ROLE_Director' THEN 1
                WHEN e.E_ROLE = 'ROLE_Manager' THEN 2
                WHEN e.E_ROLE = 'ROLE_Staff' THEN 3
                ELSE 4
            END,
            workerInfoDpName,
            workerInfoEmpId
    </select>

    <!-- 작업자 등록 -->
    <insert id="workerInsert" parameterType="com.cnr_furniture.domain.work.workerInsert.WorkerInsertModalWorkerInsertVO">
        insert into Worker
            (
            wr_emp_id,
            wr_work_id,
            wr_start_time,
            wr_end_time
            )
        values
            (
            #{edit_w_emp_id},
            #{edit_w_id},
            #{edit_w_start_time},
            #{edit_w_end_time}
            )
    </insert>


    <!-- 작업자 삭제 -->
    <delete id="workerInsertModalDeleteWorker" parameterType="int">
        DELETE FROM
            WORKER
        WHERE
            wr_emp_id = #{emp_id}
            AND wr_work_id = #{work_id}

    </delete>


</mapper>